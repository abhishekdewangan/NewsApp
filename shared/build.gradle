plugins {
    id("kotlinx-serialization")
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
    }
}

kotlin {
    targets {
        fromPreset(presets.android, 'android')
    }

    sourceSets {
        commonMain.dependencies {
            api 'org.jetbrains.kotlin:kotlin-stdlib-common'

            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            implementation "com.russhwolf:multiplatform-settings:$multiplatform_seting_version"

            implementation "org.kodein.di:kodein-di-core:$kodein_version"
            implementation "org.kodein.di:kodein-di-erased:$kodein_version"

            implementation "io.ktor:ktor-client-core:$ktor_version"
            implementation "io.ktor:ktor-client-json:$ktor_version"
            implementation "io.ktor:ktor-client-logging:$ktor_version"
            implementation "io.ktor:ktor-client-serialization:$ktor_client_serialization"

            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
        }

        androidMain.dependencies {
            api 'org.jetbrains.kotlin:kotlin-stdlib'

            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

            implementation "org.slf4j:slf4j-simple:$slf_logger_version"
            implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
            implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
            implementation "io.ktor:ktor-client-serialization-jvm:$ktor_client_serialization"

            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xuse-experimental=kotlin.Experimental",
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                '-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer,kotlinx.coroutines.ObsoleteCoroutinesApi'
        ]
    }
}